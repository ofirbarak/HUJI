class Math {
    
    static Array bitsArray;

    /** Initializes the library. */
    function void init() {
        var int i,j;
        let i=0;   
        let j=1;     
        let bitsArray = Array.new(16);
        while(i<15){
            let bitsArray[i]=j;
            let j = j + j;
            let i=i+1;
        }
        let bitsArray[15]=16384+16384;        
        return;
    }

    /** Returns if jth bit of x is 1 */
    function boolean bit(int x, int j){
        var int temp;
        let temp = x & bitsArray[j]; 
        return ~(temp = 0);
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if(x < 0){
            return -x;
        }
        return x;
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) {
        var int sum, shiftedX,j;
        let sum = 0;
        let shiftedX = x;
        let j = 0;
        while(j < 16){
            if(Math.bit(y,j)){
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX;
            let j = j + 1;
        }
        return sum;
    }

    function int divide(int x, int y) {
        var int q,res,a,b,c;
        let a = Math.abs(x);
        let b = Math.abs(y);
        
        if((a<b)|(b<0)){
            return 0;
        }
        let c = b + b;
        let q = Math.divide(a,c);
        if((a - (q * c)) < b){
            let res = q + q;
        }else{
            let res = q + q + 1;
        }

        if(x>0 & y > 0){
            return res;
        }
        if(x<0 & y < 0){
            return res;
        }
        else{
            return -res;
        }
    }      



    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int y,j,temp,power;
        let y = 0;
        let j = 7;
        while(j > -1){
            let power = y + bitsArray[j];
            let temp = power*power;
            if((~(temp > x)) & (temp > 0)){
                let y = power;
            }
            let j = j - 1;
        }
        return y;
    }


    /** Returns the greater number. */
    function int max(int a, int b) {
        if(a > b){
            return a;
        }
        return b;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if(a < b){
            return a;
        }
        return b;
    }

    
    function int mod(int a, int b){
        return a - (Math.divide(a,b) * b);
    }

    
    function int powerOfTwo(int i){
        return bitsArray[i];
    }
}
